% .explain # table_name
% mal # name
% clob # type
% 488 # length
function user.s4_1():void;
    X_6:void := querylog.define("explain select d_year, s_city, p_brand, sum(lo_revenue - lo_supplycost) as profit\nfrom date, customer, supplier, part, lineorder\nwhere lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = 1 \n and s_nation = 23 \n and (d_year = 1997 or d_year = 1998)\n and p_category = 3 \ngroup by d_year, s_city, p_brand\norder by d_year, s_city, p_brand;":str, "default_pipe":str, 211:int);
    X_275:bat[:str] := bat.new(nil:str);
    X_281:bat[:int] := bat.new(nil:int);
    X_279:bat[:int] := bat.new(nil:int);
    X_278:bat[:str] := bat.new(nil:str);
    X_277:bat[:str] := bat.new(nil:str);
    X_9:int := sql.mvc();
    C_10:bat[:oid] := sql.tid(X_9:int, "ssb":str, "lineorder":str);
    X_37:bat[:int] := sql.bind(X_9:int, "ssb":str, "lineorder":str, "lo_orderdate":str, 0:int);
    X_43:bat[:int] := algebra.projection(C_10:bat[:oid], X_37:bat[:int]);
    C_58:bat[:oid] := sql.tid(X_9:int, "ssb":str, "date":str);
    X_67:bat[:int] := sql.bind(X_9:int, "ssb":str, "date":str, "d_year":str, 0:int);
    X_73:bat[:int] := algebra.projection(C_58:bat[:oid], X_67:bat[:int]);
    C_76:bat[:oid] := algebra.thetaselect(X_73:bat[:int], 1997:int, "==":str);
    C_80:bat[:oid] := algebra.thetaselect(X_73:bat[:int], 1998:int, "==":str);
    C_81:bat[:oid] := bat.mergecand(C_76:bat[:oid], C_80:bat[:oid]);
    X_60:bat[:int] := sql.bind(X_9:int, "ssb":str, "date":str, "d_datekey":str, 0:int);
    X_82:bat[:int] := algebra.projectionpath(C_81:bat[:oid], C_58:bat[:oid], X_60:bat[:int]);
    (X_84:bat[:oid], X_85:bat[:oid]) := algebra.join(X_43:bat[:int], X_82:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng);
    X_23:bat[:int] := sql.bind(X_9:int, "ssb":str, "lineorder":str, "lo_partkey":str, 0:int);
    X_91:bat[:int] := algebra.projectionpath(X_84:bat[:oid], C_10:bat[:oid], X_23:bat[:int]);
    C_98:bat[:oid] := sql.tid(X_9:int, "ssb":str, "part":str);
    X_107:bat[:int] := sql.bind(X_9:int, "ssb":str, "part":str, "p_category":str, 0:int);
    X_113:bat[:int] := algebra.projection(C_98:bat[:oid], X_107:bat[:int]);
    C_123:bat[:oid] := algebra.thetaselect(X_113:bat[:int], 3:int, "==":str);
    X_100:bat[:int] := sql.bind(X_9:int, "ssb":str, "part":str, "p_partkey":str, 0:int);
    X_125:bat[:int] := algebra.projectionpath(C_123:bat[:oid], C_98:bat[:oid], X_100:bat[:int]);
    (X_128:bat[:oid], X_129:bat[:oid]) := algebra.join(X_91:bat[:int], X_125:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng);
    X_30:bat[:int] := sql.bind(X_9:int, "ssb":str, "lineorder":str, "lo_suppkey":str, 0:int);
    X_136:bat[:int] := algebra.projectionpath(X_128:bat[:oid], X_84:bat[:oid], C_10:bat[:oid], X_30:bat[:int]);
    C_145:bat[:oid] := sql.tid(X_9:int, "ssb":str, "supplier":str);
    X_161:bat[:int] := sql.bind(X_9:int, "ssb":str, "supplier":str, "s_nation":str, 0:int);
    X_167:bat[:int] := algebra.projection(C_145:bat[:oid], X_161:bat[:int]);
    C_170:bat[:oid] := algebra.thetaselect(X_167:bat[:int], 23:int, "==":str);
    X_147:bat[:int] := sql.bind(X_9:int, "ssb":str, "supplier":str, "s_suppkey":str, 0:int);
    X_172:bat[:int] := algebra.projectionpath(C_170:bat[:oid], C_145:bat[:oid], X_147:bat[:int]);
    (X_175:bat[:oid], X_176:bat[:oid]) := algebra.join(X_136:bat[:int], X_172:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng);
    X_13:bat[:int] := sql.bind(X_9:int, "ssb":str, "lineorder":str, "lo_custkey":str, 0:int);
    X_181:bat[:int] := algebra.projectionpath(X_175:bat[:oid], X_128:bat[:oid], X_84:bat[:oid], C_10:bat[:oid], X_13:bat[:int]);
    C_195:bat[:oid] := sql.tid(X_9:int, "ssb":str, "customer":str);
    X_204:bat[:int] := sql.bind(X_9:int, "ssb":str, "customer":str, "c_region":str, 0:int);
    X_210:bat[:int] := algebra.projection(C_195:bat[:oid], X_204:bat[:int]);
    C_213:bat[:oid] := algebra.thetaselect(X_210:bat[:int], 1:int, "==":str);
    X_197:bat[:int] := sql.bind(X_9:int, "ssb":str, "customer":str, "c_custkey":str, 0:int);
    X_215:bat[:int] := algebra.projectionpath(C_213:bat[:oid], C_195:bat[:oid], X_197:bat[:int]);
    (X_217:bat[:oid], X_218:bat[:oid]) := algebra.join(X_181:bat[:int], X_215:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng);
    X_114:bat[:int] := sql.bind(X_9:int, "ssb":str, "part":str, "p_brand":str, 0:int);
    X_233:bat[:int] := algebra.projectionpath(X_217:bat[:oid], X_175:bat[:oid], X_129:bat[:oid], C_123:bat[:oid], C_98:bat[:oid], X_114:bat[:int]);
    X_154:bat[:int] := sql.bind(X_9:int, "ssb":str, "supplier":str, "s_city":str, 0:int);
    X_235:bat[:int] := algebra.projectionpath(X_217:bat[:oid], X_176:bat[:oid], C_170:bat[:oid], C_145:bat[:oid], X_154:bat[:int]);
    X_230:bat[:int] := algebra.projectionpath(X_217:bat[:oid], X_175:bat[:oid], X_128:bat[:oid], X_85:bat[:oid], C_81:bat[:oid], X_73:bat[:int]);
    (X_244:bat[:oid], C_245:bat[:oid], X_246:bat[:lng]) := group.group(X_230:bat[:int]);
    (X_247:bat[:oid], C_248:bat[:oid], X_249:bat[:lng]) := group.subgroup(X_235:bat[:int], X_244:bat[:oid]);
    (X_250:bat[:oid], C_251:bat[:oid], X_252:bat[:lng]) := group.subgroupdone(X_233:bat[:int], X_247:bat[:oid]);
    X_253:bat[:int] := algebra.projection(C_251:bat[:oid], X_230:bat[:int]);
    X_254:bat[:int] := algebra.projection(C_251:bat[:oid], X_235:bat[:int]);
    X_255:bat[:int] := algebra.projection(C_251:bat[:oid], X_233:bat[:int]);
    X_44:bat[:int] := sql.bind(X_9:int, "ssb":str, "lineorder":str, "lo_revenue":str, 0:int);
    X_227:bat[:int] := algebra.projectionpath(X_217:bat[:oid], X_175:bat[:oid], X_128:bat[:oid], X_84:bat[:oid], C_10:bat[:oid], X_44:bat[:int]);
    X_239:bat[:lng] := batcalc.lng(X_227:bat[:int]);
    X_51:bat[:int] := sql.bind(X_9:int, "ssb":str, "lineorder":str, "lo_supplycost":str, 0:int);
    X_228:bat[:int] := algebra.projectionpath(X_217:bat[:oid], X_175:bat[:oid], X_128:bat[:oid], X_84:bat[:oid], C_10:bat[:oid], X_51:bat[:int]);
    X_240:bat[:lng] := batcalc.lng(X_228:bat[:int]);
    X_241:bat[:lng] := batcalc.-(X_239:bat[:lng], X_240:bat[:lng]);
    X_256:bat[:lng] := aggr.subsum(X_241:bat[:lng], X_250:bat[:oid], C_251:bat[:oid], true:bit, true:bit);
    (X_259:bat[:int], X_260:bat[:oid], X_261:bat[:oid]) := algebra.sort(X_253:bat[:int], false:bit, false:bit);
    (X_264:bat[:int], X_265:bat[:oid], X_266:bat[:oid]) := algebra.sort(X_254:bat[:int], X_260:bat[:oid], X_261:bat[:oid], false:bit, false:bit);
    (X_267:bat[:int], X_268:bat[:oid], X_269:bat[:oid]) := algebra.sort(X_255:bat[:int], X_265:bat[:oid], X_266:bat[:oid], false:bit, false:bit);
    X_273:bat[:lng] := algebra.projection(X_268:bat[:oid], X_256:bat[:lng]);
    X_272:bat[:int] := algebra.projection(X_268:bat[:oid], X_255:bat[:int]);
    X_271:bat[:int] := algebra.projection(X_268:bat[:oid], X_254:bat[:int]);
    X_270:bat[:int] := algebra.projection(X_268:bat[:oid], X_253:bat[:int]);
    X_282:bat[:str] := bat.append(X_275:bat[:str], "ssb.date":str);
    X_284:bat[:str] := bat.append(X_277:bat[:str], "d_year":str);
    X_286:bat[:str] := bat.append(X_278:bat[:str], "int":str);
    X_288:bat[:int] := bat.append(X_279:bat[:int], 32:int);
    X_290:bat[:int] := bat.append(X_281:bat[:int], 0:int);
    X_292:bat[:str] := bat.append(X_282:bat[:str], "ssb.supplier":str);
    X_294:bat[:str] := bat.append(X_284:bat[:str], "s_city":str);
    X_296:bat[:str] := bat.append(X_286:bat[:str], "int":str);
    X_297:bat[:int] := bat.append(X_288:bat[:int], 32:int);
    X_298:bat[:int] := bat.append(X_290:bat[:int], 0:int);
    X_299:bat[:str] := bat.append(X_292:bat[:str], "ssb.part":str);
    X_301:bat[:str] := bat.append(X_294:bat[:str], "p_brand":str);
    X_303:bat[:str] := bat.append(X_296:bat[:str], "int":str);
    X_304:bat[:int] := bat.append(X_297:bat[:int], 32:int);
    X_305:bat[:int] := bat.append(X_298:bat[:int], 0:int);
    X_306:bat[:str] := bat.append(X_299:bat[:str], "ssb.L6":str);
    X_308:bat[:str] := bat.append(X_301:bat[:str], "profit":str);
    X_310:bat[:str] := bat.append(X_303:bat[:str], "bigint":str);
    X_312:bat[:int] := bat.append(X_304:bat[:int], 64:int);
    X_314:bat[:int] := bat.append(X_305:bat[:int], 0:int);
    sql.resultSet(X_306:bat[:str], X_308:bat[:str], X_310:bat[:str], X_312:bat[:int], X_314:bat[:int], X_270:bat[:int], X_271:bat[:int], X_272:bat[:int], X_273:bat[:lng]);
end user.s4_1;
#inline               actions= 0 time=2 usec 
#remap                actions= 1 time=30 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions=10 time=37 usec 
#emptybind            actions=16 time=16 usec 
#pushselect           actions= 0 time=2 usec 
#aliases              actions=26 time=14 usec 
#mergetable           actions= 0 time=71 usec 
#deadcode             actions=61 time=13 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions=29 time=13 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions=29 time=16 usec 
#deadcode             actions=29 time=10 usec 
#reorder              actions= 1 time=26 usec 
#matpack              actions= 0 time=0 usec 
#multiplex            actions= 0 time=1 usec 
#profiler             actions=1 time=1 usec 
#candidates           actions=1 time=1 usec 
#deadcode             actions= 0 time=7 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=96 usec 
#total                actions=28 time=471 usec 
